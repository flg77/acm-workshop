<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RHACM Workshop</title>
    <link>http://rhacm-ws.nomiras.com/</link>
    <description>Recent content on RHACM Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Oct 2023 20:43:49 +0200</lastBuildDate><atom:link href="http://rhacm-ws.nomiras.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create a new cluster</title>
      <link>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_cluster/</link>
      <pubDate>Mon, 23 Oct 2023 22:01:13 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_cluster/</guid>
      <description>Cluster Lifecycle (Cluster Lifecycle Management use case) At a high level Cluster Lifecycle management is about creating, upgrading, and destroying and importing clusters in a multi cloud environment. In the 2nd email you received from the RHDP system, it included AWS credentials, Access Key ID, Secret Access Key, and the Base DNS Domain. In order to create a new OpenShift cluster in the AWS cloud we will need these keys to create a Provider Connection.</description>
    </item>
    
    <item>
      <title>New Single Node</title>
      <link>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_sno/</link>
      <pubDate>Mon, 23 Oct 2023 22:01:20 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_sno/</guid>
      <description>Creating a Single Node Cluster (SNO) in AWS In this exercise we will show you how to create a single node cluster (OCP 4.13 or above required) in order to save some time and resources when building clusters for testing.
** Please NOTE that provisioning SNO clusters in public clouds is not currently supported, we only support SNO clusters as bare metal, we leverage the public cloud in the example below to showcase the functionality only.</description>
    </item>
    
    <item>
      <title>Create Hosted Control Plane</title>
      <link>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_hosted_control_plane/</link>
      <pubDate>Mon, 23 Oct 2023 22:02:41 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/cluster_lifecycle/new_hosted_control_plane/</guid>
      <description>** Hosted Control Planes** is a technology preview feature, it shouldn’t be used in production clusters.
In this section, we will enable the feature and deploy a Hosted Cluster on AWS.
On the Clusters page, select once again Create Cluster.
Select Amazon Web Services and Hosted mode. You’ll face the official instructions on how to create a hosted cluster.
1 - Turn on Hosted Control Planes functionality
The hosted control planes feature is available as a technology preview item and it’s disabled by default.</description>
    </item>
    
    <item>
      <title>Create App - Application Lifecycle</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/create_app/</link>
      <pubDate>Mon, 23 Oct 2023 22:03:10 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/create_app/</guid>
      <description>In the previous lab, you explored the Cluster Lifecycle functionality in RHACM. This allowed you to register/import an OpenShift® cluster to RHACM, which you can now use to deploy applications.
Application Lifecycle functionality in RHACM provides the processes that are used to manage application resources on your managed clusters. This allows you to define a single or multi-cluster application using Kubernetes specifications, but with additional automation of the deployment and lifecycle management of resources to individual clusters.</description>
    </item>
    
    <item>
      <title>Deploy_aap2</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_aap2/</link>
      <pubDate>Mon, 23 Oct 2023 22:07:25 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_aap2/</guid>
      <description>Deploying Ansible Automation Platform 2 The purpose of this exercise is to deploy an Ansible Automation Platform and the Automation Controller (formerly known as Ansible Tower) and integrate it with RHACM to perform pre/post tasks within the application lifecycle engine. The prehook and posthook task allows you to trigger an Ansible playbook before and after the application is deployed, respectively. Let’s get started with installing the Ansible Automation Platform (AAP) operator.</description>
    </item>
    
    <item>
      <title>Deploy_servicenow_dev</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_servicenow_dev/</link>
      <pubDate>Mon, 23 Oct 2023 22:07:50 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_servicenow_dev/</guid>
      <description>Deploying a ServiceNow Developer Instance The purpose of this exercise is to take advantage of the Ansible Automation Platform (AAP) you just deployed to kick off Ansible Jobs (tied to prehook or posthook tasks in the application lifecycle of ACM.
A pre hook will kick off an Ansible job before the application creation / modification. A post hook will kick off an Ansible job after the application creation / modification.</description>
    </item>
    
    <item>
      <title>Deploy_snow_aap_integrate</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_snow_aap_integrate/</link>
      <pubDate>Mon, 23 Oct 2023 22:08:23 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_snow_aap_integrate/</guid>
      <description>Create an application to take advantage of the ACM - Ansible integration The purpose of this short section is to show how ACM integration with Ansible will kick off an Ansible Job.
In this case the Ansible Job will run a playbook that will trigger the creation of a ServiceNow Change Request, exactly like we did and saw in the previous section.
Within ACM navigate to the Applications menu on the left, and click Create application →</description>
    </item>
    
    <item>
      <title>Deploy_aap_creds_acm</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_aap_creds_acm/</link>
      <pubDate>Mon, 23 Oct 2023 22:10:27 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/deploy_aap_creds_acm/</guid>
      <description>Create AAP credential in ACM Here, we are going to set up the credential which is going to allow ACM to interact with our AAP instance. Click on Credentials on the left menu and select Add Credential button.
Credential type: Ansible Automation Platform Credential name: aapaccess Namespace: open-cluster-management
Click NEXT
For Ansible Tower Host enter you Ansible instance URL, you will find this information on previous screen if not check the ROUTES on your HUB Cluster For Ansible Tower token enter the admin user token you generated earlier In order to save, click NEXT and ADD.</description>
    </item>
    
    <item>
      <title>Rhacm_policies</title>
      <link>http://rhacm-ws.nomiras.com/governance/rhacm_policies/</link>
      <pubDate>Mon, 23 Oct 2023 22:11:56 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/governance/rhacm_policies/</guid>
      <description>Governance, Risk, and Compliance (Security and compliance use case) Creating Policies in ACM At this point, you have completed the overview labs for Cluster Lifecycle and Application Lifecycle capabilities in RHACM. In the Cluster Lifecycle Lab, you learned how RHACM can help manage the lifecycles of your Kubernetes clusters, including both deploying new clusters and importing existing clusters. In that lab, you configured your RHACM instance to manage an OpenShift® cluster.</description>
    </item>
    
    <item>
      <title>Grafana_integration</title>
      <link>http://rhacm-ws.nomiras.com/observability/grafana_integration/</link>
      <pubDate>Mon, 23 Oct 2023 22:16:31 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/observability/grafana_integration/</guid>
      <description>Integrate Grafana into ACM
Login to the bastion host host. Create a namespace by running the following command: oc create namespace open-cluster-management-observability Copy the pull secret into this new namespace by running the following TWO commands:
DOCKER_CONFIG_JSON=`oc extract secret/pull-secret -n openshift-config --to=-
open-cluster-management-observability --from-literal=.dockerconfigjson=&amp;#34;$DOCKER_CONFIG_JSON&amp;#34; --type=kubernetes.io/dockerconfigjson In your current folder create a file called thanos-object-storage.yaml and add the following text in the file. Please be sure to update your S3 bucket name and AWS Keys apiVersion: v1 kind: Secret metadata: name: thanos-object-storage type: Opaque stringData: thanos.</description>
    </item>
    
    <item>
      <title>Import Kubernetes</title>
      <link>http://rhacm-ws.nomiras.com/appendix/import_kubernetes/</link>
      <pubDate>Tue, 24 Oct 2023 20:43:49 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/appendix/import_kubernetes/</guid>
      <description>Importing a Kubernetes cluster You can import previously existing OpenShift clusters, or other supported Kubernetes clusters for example, IKS, EKS, AKS, or GKE. The following is an example of importing an already existing OpenShift cluster into ACM. Click on Add Cluster &amp;ndash;&amp;gt; Import Clusters. Under labels make sure you add the environment=dev label as a label example. Please note that the name you use for the cluster is not relevant, but it makes sense to use the actual cluster name in a production environment.</description>
    </item>
    
    <item>
      <title>Visibility Overview</title>
      <link>http://rhacm-ws.nomiras.com/use_cases/visibility_overview/</link>
      <pubDate>Mon, 23 Oct 2023 22:17:21 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/use_cases/visibility_overview/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create_s3_bucket</title>
      <link>http://rhacm-ws.nomiras.com/observability/create_s3_bucket/</link>
      <pubDate>Mon, 23 Oct 2023 22:13:35 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/observability/create_s3_bucket/</guid>
      <description>End to End Visibility (Observability use case) View system alerts, critical application metrics, and overall system health. Search, identify, and resolve issues that are impacting distributed workloads using an operational dashboard designed for Site Reliability Engineers (SREs). This is done via the integration of Grafana. Let&amp;rsquo;s walk through the steps to integrate Grafana with ACM. You will need your AWS Keys. (from RHDP system email) You will also need to create an AWS S3 bucket.</description>
    </item>
    
    <item>
      <title>Integrated_app_deployment</title>
      <link>http://rhacm-ws.nomiras.com/application_lifecycle/integrated_app_deployment/</link>
      <pubDate>Mon, 23 Oct 2023 22:11:15 +0200</pubDate>
      
      <guid>http://rhacm-ws.nomiras.com/application_lifecycle/integrated_app_deployment/</guid>
      <description>Create an application to take advantage of the ACM - Ansible integration The purpose of this short section is to show how ACM integration with Ansible will kick off an Ansible Job.
In this case the Ansible Job will run a playbook that will trigger the creation of a ServiceNow Change Request, exactly like we did and saw in the previous section. Within ACM navigate to the Applications menu on the left, and click Create application → Subscription.</description>
    </item>
    
  </channel>
</rss>
